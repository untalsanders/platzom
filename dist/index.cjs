'use strict';

function platzom(str) {
  var translation = str;

  /*
   * Si la palabra termina con "ar", se le quitan esas dos letras
   */
  if (str.toLowerCase().endsWith('ar')) {
    translation = str.slice(0, -2);
  }

  /*
   * Si la palabra inicia con Z, se le añade "pe" al final.
   */
  if (str.toLowerCase().startsWith('z')) {
    translation += 'pe';
  }

  /*
   * Si la palabra traducida tiene 10 o más letras,
   * se debe partir en dos por la mitad y unir con un guión medio
   */
  var length = translation.length;
  if (length >= 10) {
    var firstHalf = translation.slice(0, Math.round(length / 2));
    var secondtHalf = translation.slice(Math.round(length / 2));
    translation = "".concat(firstHalf, "-").concat(secondtHalf);
  }
  function minMay(str) {
    var length = str.length;
    var translation = '';
    var capitalize = true;
    for (var i = 0; i < length; i++) {
      var _char = str.charAt(i);
      translation += capitalize ? _char.toUpperCase() : _char.toLowerCase();
      capitalize = !capitalize;
    }
    return translation;
  }
  function reverse(str) {
    return str.split('').reverse().join('');
  }

  /*
   * Por último, si la palabra original es un palíndromo,
   * ninguna regla anterior cuenta y se devuelve la misma palabra pero
   * intercalando letras mayúsculas y minúsculas
   */
  if (str == reverse(str)) {
    return minMay(str);
  }
  return translation;
}

module.exports = platzom;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguY2pzIiwic291cmNlcyI6WyIuLi9zcmMvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHBsYXR6b20oc3RyKSB7XG4gICAgbGV0IHRyYW5zbGF0aW9uID0gc3RyXG5cbiAgICAvKlxuICAgICAqIFNpIGxhIHBhbGFicmEgdGVybWluYSBjb24gXCJhclwiLCBzZSBsZSBxdWl0YW4gZXNhcyBkb3MgbGV0cmFzXG4gICAgICovXG4gICAgaWYgKHN0ci50b0xvd2VyQ2FzZSgpLmVuZHNXaXRoKCdhcicpKSB7XG4gICAgICAgIHRyYW5zbGF0aW9uID0gc3RyLnNsaWNlKDAsIC0yKVxuICAgIH1cblxuICAgIC8qXG4gICAgICogU2kgbGEgcGFsYWJyYSBpbmljaWEgY29uIFosIHNlIGxlIGHDsWFkZSBcInBlXCIgYWwgZmluYWwuXG4gICAgICovXG4gICAgaWYgKHN0ci50b0xvd2VyQ2FzZSgpLnN0YXJ0c1dpdGgoJ3onKSkge1xuICAgICAgICB0cmFuc2xhdGlvbiArPSAncGUnXG4gICAgfVxuXG4gICAgLypcbiAgICAgKiBTaSBsYSBwYWxhYnJhIHRyYWR1Y2lkYSB0aWVuZSAxMCBvIG3DoXMgbGV0cmFzLFxuICAgICAqIHNlIGRlYmUgcGFydGlyIGVuIGRvcyBwb3IgbGEgbWl0YWQgeSB1bmlyIGNvbiB1biBndWnDs24gbWVkaW9cbiAgICAgKi9cbiAgICBjb25zdCBsZW5ndGggPSB0cmFuc2xhdGlvbi5sZW5ndGhcbiAgICBpZiAobGVuZ3RoID49IDEwKSB7XG4gICAgICAgIGNvbnN0IGZpcnN0SGFsZiA9IHRyYW5zbGF0aW9uLnNsaWNlKDAsIE1hdGgucm91bmQobGVuZ3RoIC8gMikpXG4gICAgICAgIGNvbnN0IHNlY29uZHRIYWxmID0gdHJhbnNsYXRpb24uc2xpY2UoTWF0aC5yb3VuZChsZW5ndGggLyAyKSlcbiAgICAgICAgdHJhbnNsYXRpb24gPSBgJHtmaXJzdEhhbGZ9LSR7c2Vjb25kdEhhbGZ9YFxuICAgIH1cblxuICAgIGZ1bmN0aW9uIG1pbk1heShzdHIpIHtcbiAgICAgICAgY29uc3QgbGVuZ3RoID0gc3RyLmxlbmd0aFxuICAgICAgICBsZXQgdHJhbnNsYXRpb24gPSAnJ1xuICAgICAgICBsZXQgY2FwaXRhbGl6ZSA9IHRydWVcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBsZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgY29uc3QgY2hhciA9IHN0ci5jaGFyQXQoaSlcbiAgICAgICAgICAgIHRyYW5zbGF0aW9uICs9IGNhcGl0YWxpemUgPyBjaGFyLnRvVXBwZXJDYXNlKCkgOiBjaGFyLnRvTG93ZXJDYXNlKClcbiAgICAgICAgICAgIGNhcGl0YWxpemUgPSAhY2FwaXRhbGl6ZVxuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHRyYW5zbGF0aW9uXG4gICAgfVxuXG4gICAgZnVuY3Rpb24gcmV2ZXJzZShzdHIpIHtcbiAgICAgICAgcmV0dXJuIHN0ci5zcGxpdCgnJykucmV2ZXJzZSgpLmpvaW4oJycpXG4gICAgfVxuXG4gICAgLypcbiAgICAgKiBQb3Igw7psdGltbywgc2kgbGEgcGFsYWJyYSBvcmlnaW5hbCBlcyB1biBwYWzDrW5kcm9tbyxcbiAgICAgKiBuaW5ndW5hIHJlZ2xhIGFudGVyaW9yIGN1ZW50YSB5IHNlIGRldnVlbHZlIGxhIG1pc21hIHBhbGFicmEgcGVyb1xuICAgICAqIGludGVyY2FsYW5kbyBsZXRyYXMgbWF5w7pzY3VsYXMgeSBtaW7DunNjdWxhc1xuICAgICAqL1xuICAgIGlmIChzdHIgPT0gcmV2ZXJzZShzdHIpKSB7XG4gICAgICAgIHJldHVybiBtaW5NYXkoc3RyKVxuICAgIH1cblxuICAgIHJldHVybiB0cmFuc2xhdGlvblxufVxuIl0sIm5hbWVzIjpbInBsYXR6b20iLCJzdHIiLCJ0cmFuc2xhdGlvbiIsInRvTG93ZXJDYXNlIiwiZW5kc1dpdGgiLCJzbGljZSIsInN0YXJ0c1dpdGgiLCJsZW5ndGgiLCJmaXJzdEhhbGYiLCJNYXRoIiwicm91bmQiLCJzZWNvbmR0SGFsZiIsIm1pbk1heSIsImNhcGl0YWxpemUiLCJpIiwiY2hhciIsImNoYXJBdCIsInRvVXBwZXJDYXNlIiwicmV2ZXJzZSIsInNwbGl0Iiwiam9pbiJdLCJtYXBwaW5ncyI6Ijs7QUFFZSxTQUFTQSxPQUFPLENBQUNDLEdBQUcsRUFBRTtFQUNqQyxJQUFJQyxXQUFXLEdBQUdELEdBQUcsQ0FBQTs7QUFFckI7QUFDSjtBQUNBO0VBQ0ksSUFBSUEsR0FBRyxDQUFDRSxXQUFXLEVBQUUsQ0FBQ0MsUUFBUSxDQUFDLElBQUksQ0FBQyxFQUFFO0lBQ2xDRixXQUFXLEdBQUdELEdBQUcsQ0FBQ0ksS0FBSyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFBO0FBQ2xDLEdBQUE7O0FBRUE7QUFDSjtBQUNBO0VBQ0ksSUFBSUosR0FBRyxDQUFDRSxXQUFXLEVBQUUsQ0FBQ0csVUFBVSxDQUFDLEdBQUcsQ0FBQyxFQUFFO0FBQ25DSixJQUFBQSxXQUFXLElBQUksSUFBSSxDQUFBO0FBQ3ZCLEdBQUE7O0FBRUE7QUFDSjtBQUNBO0FBQ0E7QUFDSSxFQUFBLElBQU1LLE1BQU0sR0FBR0wsV0FBVyxDQUFDSyxNQUFNLENBQUE7RUFDakMsSUFBSUEsTUFBTSxJQUFJLEVBQUUsRUFBRTtBQUNkLElBQUEsSUFBTUMsU0FBUyxHQUFHTixXQUFXLENBQUNHLEtBQUssQ0FBQyxDQUFDLEVBQUVJLElBQUksQ0FBQ0MsS0FBSyxDQUFDSCxNQUFNLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQTtBQUM5RCxJQUFBLElBQU1JLFdBQVcsR0FBR1QsV0FBVyxDQUFDRyxLQUFLLENBQUNJLElBQUksQ0FBQ0MsS0FBSyxDQUFDSCxNQUFNLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQTtBQUM3REwsSUFBQUEsV0FBVyxHQUFNTSxFQUFBQSxDQUFBQSxNQUFBQSxDQUFBQSxTQUFTLEVBQUlHLEdBQUFBLENBQUFBLENBQUFBLE1BQUFBLENBQUFBLFdBQVcsQ0FBRSxDQUFBO0FBQy9DLEdBQUE7RUFFQSxTQUFTQyxNQUFNLENBQUNYLEdBQUcsRUFBRTtBQUNqQixJQUFBLElBQU1NLE1BQU0sR0FBR04sR0FBRyxDQUFDTSxNQUFNLENBQUE7SUFDekIsSUFBSUwsV0FBVyxHQUFHLEVBQUUsQ0FBQTtJQUNwQixJQUFJVyxVQUFVLEdBQUcsSUFBSSxDQUFBO0lBQ3JCLEtBQUssSUFBSUMsQ0FBQyxHQUFHLENBQUMsRUFBRUEsQ0FBQyxHQUFHUCxNQUFNLEVBQUVPLENBQUMsRUFBRSxFQUFFO0FBQzdCLE1BQUEsSUFBTUMsS0FBSSxHQUFHZCxHQUFHLENBQUNlLE1BQU0sQ0FBQ0YsQ0FBQyxDQUFDLENBQUE7TUFDMUJaLFdBQVcsSUFBSVcsVUFBVSxHQUFHRSxLQUFJLENBQUNFLFdBQVcsRUFBRSxHQUFHRixLQUFJLENBQUNaLFdBQVcsRUFBRSxDQUFBO01BQ25FVSxVQUFVLEdBQUcsQ0FBQ0EsVUFBVSxDQUFBO0FBQzVCLEtBQUE7QUFFQSxJQUFBLE9BQU9YLFdBQVcsQ0FBQTtBQUN0QixHQUFBO0VBRUEsU0FBU2dCLE9BQU8sQ0FBQ2pCLEdBQUcsRUFBRTtBQUNsQixJQUFBLE9BQU9BLEdBQUcsQ0FBQ2tCLEtBQUssQ0FBQyxFQUFFLENBQUMsQ0FBQ0QsT0FBTyxFQUFFLENBQUNFLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQTtBQUMzQyxHQUFBOztBQUVBO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDSSxFQUFBLElBQUluQixHQUFHLElBQUlpQixPQUFPLENBQUNqQixHQUFHLENBQUMsRUFBRTtJQUNyQixPQUFPVyxNQUFNLENBQUNYLEdBQUcsQ0FBQyxDQUFBO0FBQ3RCLEdBQUE7QUFFQSxFQUFBLE9BQU9DLFdBQVcsQ0FBQTtBQUN0Qjs7OzsifQ==
